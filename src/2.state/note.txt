클래스형 이든 함수형이든 state 사용시 주의 사항

setState 혹은 useState를 통해 전달받은 세터 함수를 사옹해야 한다.

아래는 잘못된 코드 예시이다.
// class
this.state.number = this.state.number + 1;

// functional
const[ object, setObject ] = useState({ a:1, b:1 } );
object.b = 2;

배열이나 객체 사용시 어떻게 해야할까? 객체 사본을 만들어 그 사본에 값을 업데이트 하고 그 사본의 상태를 setState 혹은 세터 함수로 업데이트 해야한다 
즉 아래와 같이 변경해야 한다.

const[ object, setObject ] = useState({ a:1, b:2, c:3 } );
const nextObject = { ...object, b: 2 }; // 사본을 만들어 b값만 덮어쓰기

const array = [
    { id: 1, value: true },
    { id: 2, value: true },
    { id: 3, value: false },
];

let nextArray = array.concat({ id: 4 });
nextArray.filter( item => item.id !== 2); // id 2 항목 제거
nextArray.map( item => (item.id === 1 ? { ...item, value:false} : item)); // id 1 항목 value : false